services:
  rabbitmq:
    build: ./rabbitmq
    container_name: rabbitmq-server
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
      - RABBITMQ_DEFAULT_VHOST=/
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/mnesia
    networks:
      - rabbitmq_network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  producer:
    build: ./producer
    container_name: message-producer
    restart: "no"
    environment:
      - PRODUCER_ID=producer-1
    volumes:
      - ./data:/data
    networks:
      - rabbitmq_network
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: ["./main", "5"]

  consumer-1:
    build: ./consumer
    container_name: message-consumer-1
    restart: unless-stopped
    environment:
      - CONSUMER_ID=consumer-1
    volumes:
      - ./data:/data
    networks:
      - rabbitmq_network
    depends_on:
      rabbitmq:
        condition: service_healthy

  consumer-2:
    build: ./consumer
    container_name: message-consumer-2
    restart: unless-stopped
    environment:
      - CONSUMER_ID=consumer-2
    volumes:
      - ./data:/data
    networks:
      - rabbitmq_network
    depends_on:
      rabbitmq:
        condition: service_healthy

volumes:
  rabbitmq_data:

networks:
  rabbitmq_network:

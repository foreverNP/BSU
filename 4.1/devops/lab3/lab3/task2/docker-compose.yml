services:
  jaeger:
    image: jaegertracing/all-in-one:latest
    networks:
      - app_network
    container_name: jaeger
    ports:
      - "16686:16686" # Jaeger UI
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    networks:
      - app_network
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    restart: unless-stopped

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    networks:
      - app_network
    container_name: otel-collector
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    command: ["--config=/etc/otel-collector-config.yaml"]
    depends_on:
      - jaeger
      - prometheus
    restart: unless-stopped

  dice-app:
    build: .
    container_name: dice-app
    networks:
      - app_network
    depends_on:
      - otel-collector
    environment:
      - FLASK_APP=app.py
      - FLASK_RUN_HOST=0.0.0.0
      - FLASK_RUN_PORT=8080
      - OTEL_PYTHON_LOGGING_AUTO_INSTRUMENTATION_ENABLED=true
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=otlp
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4319
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
      - OTEL_SERVICE_NAME=dice-server
      - OTEL_LOGS_EXPORTER=none
    ports:
      - "8080:8080"
    restart: unless-stopped

networks:
  app_network:
    driver: bridge

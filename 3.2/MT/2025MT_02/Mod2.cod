; Listing generated by Microsoft (R) Optimizing Compiler Version 19.42.34435.0 

	TITLE	C:\File\MT\2025MT_02\Mod2.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?scalar@@YAHHQAM0PAM@Z				; scalar
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp
; File C:\File\MT\2025MT_02\Mod2.cpp
_TEXT	SEGMENT
_i$1 = -4						; size = 4
_n$ = 8							; size = 4
_v$ = 12						; size = 4
_w$ = 16						; size = 4
_vw$ = 20						; size = 4
?scalar@@YAHHQAM0PAM@Z PROC				; scalar

; 7    : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 8    : 		if (n != 3) return 1;

  00005	83 7d 08 03	 cmp	 DWORD PTR _n$[ebp], 3
  00009	74 07		 je	 SHORT $LN5@scalar
  0000b	b8 01 00 00 00	 mov	 eax, 1
  00010	eb 4c		 jmp	 SHORT $LN1@scalar
$LN5@scalar:

; 9    : 		*vw = 0;

  00012	8b 45 14	 mov	 eax, DWORD PTR _vw$[ebp]
  00015	0f 57 c0	 xorps	 xmm0, xmm0
  00018	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 10   : 		for (int i = 0; i < n; i++)

  0001c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00023	eb 09		 jmp	 SHORT $LN4@scalar
$LN2@scalar:
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _i$1[ebp]
  00028	83 c1 01	 add	 ecx, 1
  0002b	89 4d fc	 mov	 DWORD PTR _i$1[ebp], ecx
$LN4@scalar:
  0002e	8b 55 fc	 mov	 edx, DWORD PTR _i$1[ebp]
  00031	3b 55 08	 cmp	 edx, DWORD PTR _n$[ebp]
  00034	7d 26		 jge	 SHORT $LN3@scalar

; 11   : 			*vw = *vw + v[i] * w[i];

  00036	8b 45 fc	 mov	 eax, DWORD PTR _i$1[ebp]
  00039	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  0003c	8b 55 fc	 mov	 edx, DWORD PTR _i$1[ebp]
  0003f	8b 75 10	 mov	 esi, DWORD PTR _w$[ebp]
  00042	f3 0f 10 04 81	 movss	 xmm0, DWORD PTR [ecx+eax*4]
  00047	f3 0f 59 04 96	 mulss	 xmm0, DWORD PTR [esi+edx*4]
  0004c	8b 45 14	 mov	 eax, DWORD PTR _vw$[ebp]
  0004f	f3 0f 58 00	 addss	 xmm0, DWORD PTR [eax]
  00053	8b 4d 14	 mov	 ecx, DWORD PTR _vw$[ebp]
  00056	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0
  0005a	eb c9		 jmp	 SHORT $LN2@scalar
$LN3@scalar:

; 12   : 		return 0;

  0005c	33 c0		 xor	 eax, eax
$LN1@scalar:

; 13   : 
; 14   : 	}

  0005e	5e		 pop	 esi
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
?scalar@@YAHHQAM0PAM@Z ENDP				; scalar
_TEXT	ENDS
END

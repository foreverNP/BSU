import random
import numpy as np
from scipy.spatial.distance import euclidean


# Список диагнозов и соответствующих методов лечения
diagnoses = [
    "Пневмония",
    "Грипп",
    "Сахарный диабет",
    "Артериальная гипертензия",
    "Астма",
    "Бронхит",
    "Аллергия",
    "Мигрень",
    "Желудочно-кишечные расстройства",
    "Коронавирусная инфекция",
    "Анемия",
    "Рак легких",
    "Остеопороз",
    "Аритмия",
    "Туберкулёз",
    "Холера",
    "Малярия",
    "Брюшной тиф",
    "Гепатит А",
    "Гепатит В",
    "Гепатит С",
    "ВИЧ/СПИД",
    "Сифилис",
    "Гонорея",
    "Корь",
    "Краснуха",
    "Ветряная оспа",
    "Эпидемический паротит",
    "Дифтерия",
    "Столбняк",
    "Коклюш",
    "Полиомиелит",
    "Бешенство",
    "Лептоспироз",
    "Бруцеллёз",
    "Сибирская язва",
    "Лихорадка Денге",
    "Жёлтая лихорадка",
    "Лихорадка Эбола",
    "Лихорадка Ласса",
    "Лихорадка Зика",
    "Лихорадка Западного Нила",
    "Лихорадка Рифт-Валли",
    "Лихорадка Чикунгунья",
    "Лихорадка Марбург",
    "Ротавирусная инфекция",
    "Норовирусная инфекция",
    "Шигеллёз",
    "Сальмонеллёз",
    "Болезнь Лайма",
    "Сыпной тиф",
    "Ку-лихорадка",
    "Оспа",
    "Туляремия",
    "Геморрагическая лихорадка",
    "Ящур",
    "Лейшманиоз",
    "Токсоплазмоз",
    "Амёбиаз",
    "Лямблиоз",
    "Аскаридоз",
    "Энтеробиоз",
    "Трихинеллёз",
    "Чума",
    "Проказа",
    "Скарлатина",
    "Менингококковая инфекция",
    "Пневмококковая инфекция",
    "Грибковый менингит",
    "Кандидоз",
    "Гистоплазмоз",
    "Кокцидиоидомикоз",
    "Аспергиллёз",
    "Криптококкоз",
    "Цитомегаловирус",
    "Вирус Эпштейна-Барр",
    "Вирус папилломы человека",
    "Опоясывающий лишай",
    "Парвовирусная инфекция",
    "Аденовирусная инфекция",
    "Респираторно-синцитиальный вирус",
    "Энтеровирусная инфекция",
    "Гемофильная инфекция",
    "Клещевой энцефалит",
    "Японский энцефалит",
    "Лихорадка долины Рифт",
    "Орнитоз",
    "Пситтакоз",
    "Содоку",
    "Мелиоидоз",
    "Газовая гангрена",
    "Актиномикоз",
    "Некротический фасциит",
    "Рожа",
    "Тропическая малярия",
    "Чёрная лихорадка",
    "Болезнь Шагаса",
    "Сонная болезнь",
    "Лихорадка Пуумала",
    "Хантавирусный лёгочный синдром",
    "Лихорадка денге",
    "Лихорадка Оропуш",
    "Вирусная геморрагическая септицемия",
]

treatments = [
    "Антибиотики",
    "Противовирусные препараты",
    "Инсулинотерапия",
    "Антигипертензивные препараты",
    "Ингаляторы",
    "Отхаркивающие препараты",
    "Антигистаминные средства",
    "Анальгетики",
    "Диетотерапия",
    "Антиковидные препараты",
    "Железосодержащие препараты",
    "Химиотерапия",
    "Кальцийсодержащие препараты",
    "Противоаритмические препараты",
    "Кортикостероиды",
    "Иммуномодуляторы",
    "Противогрибковые средства",
    "Антикоагулянты",
    "Тромболитики",
    "Гемодиализ",
    "Плазмаферез",
    "Лучевая терапия",
    "Гормонозаместительная терапия",
    "Антидепрессанты",
    "Нейролептики",
    "Противосудорожные средства",
    "Бета-блокаторы",
    "Диуретики",
    "Статины",
    "Вакцинация",
    "Сыворотки",
    "Инфузионная терапия",
    "Оксигенотерапия",
    "ИВЛ",
    "Кардиостимуляция",
    "Дезинтоксикация",
    "Энтеросорбенты",
    "Пробиотики",
    "Ферментные препараты",
    "Витаминотерапия",
    "Переливание крови",
    "Трансплантация органов",
    "Гемотрансфузия",
    "Криотерапия",
    "Гипербарическая оксигенация",
    "Лазеротерапия",
    "Физиотерапия",
    "Реабилитационные программы",
    "Психотерапия",
    "Иглорефлексотерапия",
    "Хирургическая декомпрессия",
    "Артроскопия",
    "Лапароскопия",
    "Шунтирование",
    "Стентирование",
    "Кесарево сечение",
    "Ампутация",
    "Наложение гипса",
    "Терапия стволовыми клетками",
    "Моноклональные антитела",
    "Таргетная терапия",
    "Ингибиторы протонной помпы",
    "Антациды",
    "Спазмолитики",
    "Слабительные",
    "Противодиарейные",
    "Желчегонные",
    "Урсодезоксихолевая кислота",
    "Инсулиновые помпы",
    "Глюкокортикоиды",
    "Цитостатики",
    "Интерфероны",
    "Противомалярийные",
    "Антигельминтные",
    "Противотуберкулёзные",
    "Противолепрозные",
    "Антитоксины",
    "Иммуноглобулины",
    "Противовоспалительные мази",
    "Антисептики",
    "Рентгенотерапия",
    "Фотодинамическая терапия",
    "Генная терапия",
    "CRISPR-терапия",
    "Нейростимуляция",
    "Ботулинотерапия",
    "Мезотерапия",
    "Озонотерапия",
    "Аутосеротерапия",
    "Антидоты",
    "Противорвотные",
    "Анестетики",
    "Миорелаксанты",
    "Ноотропы",
    "Адаптогены",
    "Гомеопатия",
    "Фитотерапия",
    "Аюрведические практики",
    "Транскраниальная стимуляция",
    "Литотрипсия",
    "Радиочастотная абляция",
    "Биологическая обратная связь",
    "Кислородные коктейли",
    "Спелеотерапия",
    "Гирудотерапия",
    "Ароматерапия",
    "Мануальная терапия",
    "Остеопатия",
    "Кинезиотейпирование",
]


def generate_database(n, m):
    database = []
    for i in range(n):
        index = i % len(diagnoses)
        diagnosis = diagnoses[index]
        dna_vector = [random.uniform(0, 1) for _ in range(m)]
        num_treatments = random.randint(2, 8)
        random_treats = random.sample(treatments, num_treatments)
        database.append((diagnosis, dna_vector, random_treats))
    return database


def find_closest_vectors(database, input_vector, top_n=3):
    distances = []
    for record in database:
        diagnosis, dna_vector, treatment = record
        distance = euclidean(dna_vector, input_vector)  # Евклидово расстояние
        distances.append((distance, diagnosis, treatment))

    distances.sort(key=lambda x: x[0])  # Сортировка по расстоянию
    return distances[:top_n]


n = 200  # Количество записей
m = 50  # Длина ДНК-вектора
database = generate_database(n, m)

# Ввод данных больного
patient_name = "Иванов Иван Иванович"
input_vector = [random.uniform(0, 1) for _ in range(m)]

closest_matches = find_closest_vectors(database, input_vector)

print(f"Пациент: {patient_name}")
print("Введённый ДНК-вектор:", input_vector)
print("\n3 наиболее близких диагноза из базы данных:")
for i, (distance, diagnosis, treat_list) in enumerate(closest_matches):
    print(
        f"{i + 1}. Диагноз: {diagnosis}, Лечение: {', '.join(treat_list)}, Расстояние: {distance:.4f}"
    )
